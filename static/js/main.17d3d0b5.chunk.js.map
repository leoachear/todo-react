{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","CreateTodoButton/index.js","Modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","toggleCompleteTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.17d3d0b5.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error,\n    } = useLocalStorage('TODOS_V1', []);  \n    \n    const [searchValue, setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n    \n    const completedTodos = todos.filter(todo => todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n\n    if(!searchValue.length >= 1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLowerCase();\n\n            return todoText.includes(searchText);\n        });\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        });\n        saveTodos(newTodos);\n    };\n\n    const toggleCompleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\n\n        saveTodos(newTodos);\n    };\n\n    // React.useEffect(() => {\n    //     console.log('use effect');\n    // }, [totalTodos]);\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n\n        saveTodos(newTodos);\n    };\n    \n    return(\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            addTodo,\n            toggleCompleteTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal,\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport { TodoContext, TodoProvider };","import React from 'react';\n\n\nfunction useLocalStorage(itemName, initialValue) {\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n  \n    React.useEffect(() => {\n      setTimeout(() => {\n        try {\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n            \n          if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n          } else {\n            parsedItem = JSON.parse(localStorageItem);\n          }\n  \n          setItem(parsedItem);\n          setLoading(false);\n        } catch (error) {\n          setError(error);\n        }\n      },1);\n    });\n  \n    const saveItem = (newItem) => {\n      try {\n        const stringifiedItem = JSON.stringify(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n        setItem(newItem);\n      } catch (error) {\n        setError(error);\n      }\n    };\n  \n    // lo que retorno a los componentes que se suscriban a este React hook.\n    return {\n      item,\n      saveItem,\n      loading,\n      error,\n    };\n}\n\nexport { useLocalStorage };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\n\n  return (\n    <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n  );\n}\n\nexport { TodoCounter };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n  \n  const onSearchValueChange = (event) => {\n    //console.log(event.target.value);\n    setSearchValue(event.target.value);\n  }\n\n  return (\n    <input \n      className=\"TodoSearch\"\n      placeholder=\"Buscar...\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"TodoItem\">\n      <span \n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        âˆš\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span \n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoForm.css';\n\nfunction TodoForm() {\n    // Creo un state local, no es necesario que lo vea toda la app.\n    const [ newTodoValue, setNewTodoValue ] = React.useState('');\n\n    const {\n        addTodo,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    };\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    };\n\n    return(\n        <form onSubmit={onSubmit}>\n            <label>Escribe tu nuevo TODO</label>\n            <textarea \n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"Ingresa una tarea...\"\n            />\n            <div className=\"TodoForm-buttonContainer\">\n                <button\n                    type=\"button\"\n                    className=\"TodoForm-button TodoForm-button--cancel\"\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"TodoForm-button TodoForm-button--add\"\n                >\n                    AÃ±adir\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport { TodoForm };","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n  const onClickButton = () => {\n    // Las funciones set del estado, nos permiten enviarles el valor directamente, o una funcion en la cual recibimos el estado previo a la actualizacion.\n    props.setOpenModal(prevState => !prevState);\n  };\n\n  return (\n    <button \n      className=\"CreateTodoButton\" \n      onClick={onClickButton}\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nfunction Modal({ children }){\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { TodoForm } from '../TodoForm';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { Modal } from '../Modal';\n\nfunction AppUI(){\n    /* AcÃ¡ va a llegar el value definido en el return del TodoContext.\n    *  const value = React.useContext(TodoContext); \n    *  lo reemplazo abajo por el objeto que recibe cada propiedad.\n    */\n    const {\n        error,\n        loading,\n        searchedTodos,\n        toggleCompleteTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n\n    return(\n        <React.Fragment>\n            <TodoCounter />\n            <TodoSearch />\n            <TodoList>\n                {error && <p>Hubo un error...</p>}\n                {loading && <p>Estamos cargando...</p>}\n                {(!loading && !searchedTodos.length) && <p>Crea tu primer TODO.</p>}\n\n                {searchedTodos.map(todo => (\n                <TodoItem\n                    key={todo.text}\n                    text={todo.text}\n                    completed={todo.completed}\n                    onComplete={() => {toggleCompleteTodo(todo.text)}}\n                    onDelete={() => {deleteTodo(todo.text)}}\n                />\n                ))}\n            </TodoList>\n            \n            {/* //La doble negaciÃ³n es para afirmar que no sÃ³lo exista, sino que sea true */}\n            \n            {!!openModal && (\n                <Modal>\n                    <TodoForm />\n                </Modal>\n            )}\n\n            <CreateTodoButton \n                setOpenModal={setOpenModal}\n            />\n        </React.Fragment>\n    );\n}\n\nexport { AppUI };\n","import React from 'react';\nimport { TodoProvider } from '../TodoContext'\nimport { AppUI } from './AppUI'\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <AppUI/>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}